RevisionsFilePath: "layers/ubuntu1604/java/revisions.bzl"
GCSDeps:

  # OpenJDK installer.
  - Name: "OPENJDK_INSTALLER"
    Bucket: "bazel-mirror"
    VersionRegex: "-?\\d+(\\.\\d+)*(\\+\\d)?-jdk\\d+(\\.\\d+)*"
    FileRegex: "^openjdk/azul-zulu-?\\d+(\\.\\d+)*(\\+\\d)?-jdk\\d+(\\.\\d+)*/SHA256SUM$"
    StartsWith: "openjdk/azul-zulu"
    ReadShaFromFile: true
    StartIndex: 91

  # OpenJDK source code. (needed for licensing reason)
  - Name: "OPENJDK_SRC"
    Bucket: "bazel-mirror"
    VersionRegex: "-?\\d+(\\.\\d+)*(\\+\\d)?-jdk\\d+(\\.\\d+)*"
    FileRegex: "^openjdk/azul-zulu-?\\d+(\\.\\d+)*(\\+\\d)?-jdk\\d+(\\.\\d+)*/SHA256SUM$"
    StartsWith: "openjdk/azul-zulu"
    ReadShaFromFile: true
    StartIndex: 0

  # The debian packages tarball pulled from the GCS bucket required for the Ubuntu1604 Java layer.
  - Name: "DEBS_TARBALL"
    Bucket: "layer-deps"
    VersionRegex: "\\d{8}"
    FileRegex: "^ubuntu1604/java/debs/\\d{8}_java_debs\\.tar$"
    StartsWith: "ubuntu1604/java/debs/"

  # cacerts.tar file which contains the /etc/ssl/certs/java/cacerts file.
  # /etc/ssl/certs/java/cacerts is generated when `ca-certificates-java` is installed
  # or `update-ca-certificates -f` is run. Because of the timestamp embedded, the
  # file is not deterministic. We commit this file in a GCS bucket and reuse in layer
  # or container creation so determinism can be achieved.
  - Name: "CACERTS"
    Bucket: "layer-deps"
    VersionRegex: "\\d{8}"
    FileRegex: "^ubuntu1604/java/cacerts/\\d{8}_cacerts\\.tar$"
    StartsWith: "ubuntu1604/java/cacerts/"
